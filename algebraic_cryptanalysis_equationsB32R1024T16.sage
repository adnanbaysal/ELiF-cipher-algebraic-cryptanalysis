from sage.rings.polynomial.multi_polynomial_sequence import PolynomialSequence
from sage.sat.solvers import cryptominisat

BLK = 32
KEY = 30
RND = 1024
TST = 16


CNST = (0,0,0,1,0,0,1,1,0,1,0,1,1,1,1, 1,1,1,0,1,1,0,0,1,0,1,0,0,0,0,1)

def elf_enc(p,k,cc=CNST) :
    c = []
    for i in range(len(p)) : c.append(p[i])
    for i in range(RND) : 
		c[2] = (c[0]*c[1]+c[2]+k[i%KEY]+cc[i%(BLK-1)])%2
		t = c[BLK-1]
		for j in range(BLK-1) : c[BLK-j-1] = c[BLK-j-2]
		c[0] = t
    return c

R.<k0,k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15,k16,k17,k18,k19,k20,k21,k22,k23,k24,k25,k26,k27,k28,k29,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,y0,y1,y2,y3,y4,y5,y6,y7,y8,y9,y10,y11,y12,y13,y14,y15,y16,y17,y18,y19,y20,y21,y22,y23,y24,y25,y26,y27,y28,y29,y30,y31,y32,y33,y34,y35,y36,y37,y38,y39,y40,y41,y42,y43,y44,y45,y46,y47,y48,y49,y50,y51,y52,y53,y54,y55,y56,y57,y58,y59,y60,y61,y62,y63,y64,y65,y66,y67,y68,y69,y70,y71,y72,y73,y74,y75,y76,y77,y78,y79,y80,y81,y82,y83,y84,y85,y86,y87,y88,y89,y90,y91,y92,y93,y94,y95,y96,y97,y98,y99,y100,y101,y102,y103,y104,y105,y106,y107,y108,y109,y110,y111,y112,y113,y114,y115,y116,y117,y118,y119,y120,y121,y122,y123,y124,y125,y126,y127,y128,y129,y130,y131,y132,y133,y134,y135,y136,y137,y138,y139,y140,y141,y142,y143,y144,y145,y146,y147,y148,y149,y150,y151,y152,y153,y154,y155,y156,y157,y158,y159,y160,y161,y162,y163,y164,y165,y166,y167,y168,y169,y170,y171,y172,y173,y174,y175,y176,y177,y178,y179,y180,y181,y182,y183,y184,y185,y186,y187,y188,y189,y190,y191,y192,y193,y194,y195,y196,y197,y198,y199,y200,y201,y202,y203,y204,y205,y206,y207,y208,y209,y210,y211,y212,y213,y214,y215,y216,y217,y218,y219,y220,y221,y222,y223,y224,y225,y226,y227,y228,y229,y230,y231,y232,y233,y234,y235,y236,y237,y238,y239,y240,y241,y242,y243,y244,y245,y246,y247,y248,y249,y250,y251,y252,y253,y254,y255,y256,y257,y258,y259,y260,y261,y262,y263,y264,y265,y266,y267,y268,y269,y270,y271,y272,y273,y274,y275,y276,y277,y278,y279,y280,y281,y282,y283,y284,y285,y286,y287,y288,y289,y290,y291,y292,y293,y294,y295,y296,y297,y298,y299,y300,y301,y302,y303,y304,y305,y306,y307,y308,y309,y310,y311,y312,y313,y314,y315,y316,y317,y318,y319,y320,y321,y322,y323,y324,y325,y326,y327,y328,y329,y330,y331,y332,y333,y334,y335,y336,y337,y338,y339,y340,y341,y342,y343,y344,y345,y346,y347,y348,y349,y350,y351,y352,y353,y354,y355,y356,y357,y358,y359,y360,y361,y362,y363,y364,y365,y366,y367,y368,y369,y370,y371,y372,y373,y374,y375,y376,y377,y378,y379,y380,y381,y382,y383,y384,y385,y386,y387,y388,y389,y390,y391,y392,y393,y394,y395,y396,y397,y398,y399,y400,y401,y402,y403,y404,y405,y406,y407,y408,y409,y410,y411,y412,y413,y414,y415,y416,y417,y418,y419,y420,y421,y422,y423,y424,y425,y426,y427,y428,y429,y430,y431,y432,y433,y434,y435,y436,y437,y438,y439,y440,y441,y442,y443,y444,y445,y446,y447,y448,y449,y450,y451,y452,y453,y454,y455,y456,y457,y458,y459,y460,y461,y462,y463,y464,y465,y466,y467,y468,y469,y470,y471,y472,y473,y474,y475,y476,y477,y478,y479,y480,y481,y482,y483,y484,y485,y486,y487,y488,y489,y490,y491,y492,y493,y494,y495,y496,y497,y498,y499,y500,y501,y502,y503,y504,y505,y506,y507,y508,y509,y510,y511,y512,y513,y514,y515,y516,y517,y518,y519,y520,y521,y522,y523,y524,y525,y526,y527,y528,y529,y530,y531,y532,y533,y534,y535,y536,y537,y538,y539,y540,y541,y542,y543,y544,y545,y546,y547,y548,y549,y550,y551,y552,y553,y554,y555,y556,y557,y558,y559,y560,y561,y562,y563,y564,y565,y566,y567,y568,y569,y570,y571,y572,y573,y574,y575,y576,y577,y578,y579,y580,y581,y582,y583,y584,y585,y586,y587,y588,y589,y590,y591,y592,y593,y594,y595,y596,y597,y598,y599,y600,y601,y602,y603,y604,y605,y606,y607,y608,y609,y610,y611,y612,y613,y614,y615,y616,y617,y618,y619,y620,y621,y622,y623,y624,y625,y626,y627,y628,y629,y630,y631,y632,y633,y634,y635,y636,y637,y638,y639,y640,y641,y642,y643,y644,y645,y646,y647,y648,y649,y650,y651,y652,y653,y654,y655,y656,y657,y658,y659,y660,y661,y662,y663,y664,y665,y666,y667,y668,y669,y670,y671,y672,y673,y674,y675,y676,y677,y678,y679,y680,y681,y682,y683,y684,y685,y686,y687,y688,y689,y690,y691,y692,y693,y694,y695,y696,y697,y698,y699,y700,y701,y702,y703,y704,y705,y706,y707,y708,y709,y710,y711,y712,y713,y714,y715,y716,y717,y718,y719,y720,y721,y722,y723,y724,y725,y726,y727,y728,y729,y730,y731,y732,y733,y734,y735,y736,y737,y738,y739,y740,y741,y742,y743,y744,y745,y746,y747,y748,y749,y750,y751,y752,y753,y754,y755,y756,y757,y758,y759,y760,y761,y762,y763,y764,y765,y766,y767,y768,y769,y770,y771,y772,y773,y774,y775,y776,y777,y778,y779,y780,y781,y782,y783,y784,y785,y786,y787,y788,y789,y790,y791,y792,y793,y794,y795,y796,y797,y798,y799,y800,y801,y802,y803,y804,y805,y806,y807,y808,y809,y810,y811,y812,y813,y814,y815,y816,y817,y818,y819,y820,y821,y822,y823,y824,y825,y826,y827,y828,y829,y830,y831,y832,y833,y834,y835,y836,y837,y838,y839,y840,y841,y842,y843,y844,y845,y846,y847,y848,y849,y850,y851,y852,y853,y854,y855,y856,y857,y858,y859,y860,y861,y862,y863,y864,y865,y866,y867,y868,y869,y870,y871,y872,y873,y874,y875,y876,y877,y878,y879,y880,y881,y882,y883,y884,y885,y886,y887,y888,y889,y890,y891,y892,y893,y894,y895,y896,y897,y898,y899,y900,y901,y902,y903,y904,y905,y906,y907,y908,y909,y910,y911,y912,y913,y914,y915,y916,y917,y918,y919,y920,y921,y922,y923,y924,y925,y926,y927,y928,y929,y930,y931,y932,y933,y934,y935,y936,y937,y938,y939,y940,y941,y942,y943,y944,y945,y946,y947,y948,y949,y950,y951,y952,y953,y954,y955,y956,y957,y958,y959,y960,y961,y962,y963,y964,y965,y966,y967,y968,y969,y970,y971,y972,y973,y974,y975,y976,y977,y978,y979,y980,y981,y982,y983,y984,y985,y986,y987,y988,y989,y990,y991,y992,y993,y994,y995,y996,y997,y998,y999,y1000,y1001,y1002,y1003,y1004,y1005,y1006,y1007,y1008,y1009,y1010,y1011,y1012,y1013,y1014,y1015,y1016,y1017,y1018,y1019,y1020,y1021,y1022,y1023> = BooleanPolynomialRing()

eqns = [k0 + x0*x1 + x2 + y0,
        k1 + x0*x31 + x1 + y1,
        k2 + x0 + x30*x31 + y2,
        k3 + x29*x30 + x31 + y3 + 1,
        k4 + x28*x29 + x30 + y4,
        k5 + x27*x28 + x29 + y5,
        k6 + x26*x27 + x28 + y6 + 1,
        k7 + x25*x26 + x27 + y7 + 1,
        k8 + x24*x25 + x26 + y8,
        k9 + x23*x24 + x25 + y9 + 1,
        k10 + x22*x23 + x24 + y10,
        k11 + x21*x22 + x23 + y11 + 1,
        k12 + x20*x21 + x22 + y12 + 1,
        k13 + x19*x20 + x21 + y13 + 1,
        k14 + x18*x19 + x20 + y14 + 1,
        k15 + x17*x18 + x19 + y15 + 1,
        k16 + x16*x17 + x18 + y16 + 1,
        k17 + x15*x16 + x17 + y17 + 1,
        k18 + x14*x15 + x16 + y18,
        k19 + x13*x14 + x15 + y19 + 1,
        k20 + x12*x13 + x14 + y20 + 1,
        k21 + x11*x12 + x13 + y21,
        k22 + x10*x11 + x12 + y22,
        k23 + x9*x10 + x11 + y23 + 1,
        k24 + x8*x9 + x10 + y24,
        k25 + x7*x8 + x9 + y25 + 1,
        k26 + x6*x7 + x8 + y26,
        k27 + x5*x6 + x7 + y27,
        k28 + x4*x5 + x6 + y28,
        k29 + x3*x4 + x5 + y29,
        k0 + x3*y0 + x4 + y30 + 1,
        k1 + x3 + y0*y1 + y31,
        k2 + y0 + y1*y2 + y32,
        k3 + y1 + y2*y3 + y33,
        k4 + y2 + y3*y4 + y34 + 1,
        k5 + y3 + y4*y5 + y35,
        k6 + y4 + y5*y6 + y36,
        k7 + y5 + y6*y7 + y37 + 1,
        k8 + y6 + y7*y8 + y38 + 1,
        k9 + y7 + y8*y9 + y39,
        k10 + y8 + y9*y10 + y40 + 1,
        k11 + y9 + y10*y11 + y41,
        k12 + y10 + y11*y12 + y42 + 1,
        k13 + y11 + y12*y13 + y43 + 1,
        k14 + y12 + y13*y14 + y44 + 1,
        k15 + y13 + y14*y15 + y45 + 1,
        k16 + y14 + y15*y16 + y46 + 1,
        k17 + y15 + y16*y17 + y47 + 1,
        k18 + y16 + y17*y18 + y48 + 1,
        k19 + y17 + y18*y19 + y49,
        k20 + y18 + y19*y20 + y50 + 1,
        k21 + y19 + y20*y21 + y51 + 1,
        k22 + y20 + y21*y22 + y52,
        k23 + y21 + y22*y23 + y53,
        k24 + y22 + y23*y24 + y54 + 1,
        k25 + y23 + y24*y25 + y55,
        k26 + y24 + y25*y26 + y56 + 1,
        k27 + y25 + y26*y27 + y57,
        k28 + y26 + y27*y28 + y58,
        k29 + y27 + y28*y29 + y59,
        k0 + y28 + y29*y30 + y60,
        k1 + y29 + y30*y31 + y61 + 1,
        k2 + y30 + y31*y32 + y62,
        k3 + y31 + y32*y33 + y63,
        k4 + y32 + y33*y34 + y64,
        k5 + y33 + y34*y35 + y65 + 1,
        k6 + y34 + y35*y36 + y66,
        k7 + y35 + y36*y37 + y67,
        k8 + y36 + y37*y38 + y68 + 1,
        k9 + y37 + y38*y39 + y69 + 1,
        k10 + y38 + y39*y40 + y70,
        k11 + y39 + y40*y41 + y71 + 1,
        k12 + y40 + y41*y42 + y72,
        k13 + y41 + y42*y43 + y73 + 1,
        k14 + y42 + y43*y44 + y74 + 1,
        k15 + y43 + y44*y45 + y75 + 1,
        k16 + y44 + y45*y46 + y76 + 1,
        k17 + y45 + y46*y47 + y77 + 1,
        k18 + y46 + y47*y48 + y78 + 1,
        k19 + y47 + y48*y49 + y79 + 1,
        k20 + y48 + y49*y50 + y80,
        k21 + y49 + y50*y51 + y81 + 1,
        k22 + y50 + y51*y52 + y82 + 1,
        k23 + y51 + y52*y53 + y83,
        k24 + y52 + y53*y54 + y84,
        k25 + y53 + y54*y55 + y85 + 1,
        k26 + y54 + y55*y56 + y86,
        k27 + y55 + y56*y57 + y87 + 1,
        k28 + y56 + y57*y58 + y88,
        k29 + y57 + y58*y59 + y89,
        k0 + y58 + y59*y60 + y90,
        k1 + y59 + y60*y61 + y91,
        k2 + y60 + y61*y62 + y92 + 1,
        k3 + y61 + y62*y63 + y93,
        k4 + y62 + y63*y64 + y94,
        k5 + y63 + y64*y65 + y95,
        k6 + y64 + y65*y66 + y96 + 1,
        k7 + y65 + y66*y67 + y97,
        k8 + y66 + y67*y68 + y98,
        k9 + y67 + y68*y69 + y99 + 1,
        k10 + y68 + y69*y70 + y100 + 1,
        k11 + y69 + y70*y71 + y101,
        k12 + y70 + y71*y72 + y102 + 1,
        k13 + y71 + y72*y73 + y103,
        k14 + y72 + y73*y74 + y104 + 1,
        k15 + y73 + y74*y75 + y105 + 1,
        k16 + y74 + y75*y76 + y106 + 1,
        k17 + y75 + y76*y77 + y107 + 1,
        k18 + y76 + y77*y78 + y108 + 1,
        k19 + y77 + y78*y79 + y109 + 1,
        k20 + y78 + y79*y80 + y110 + 1,
        k21 + y79 + y80*y81 + y111,
        k22 + y80 + y81*y82 + y112 + 1,
        k23 + y81 + y82*y83 + y113 + 1,
        k24 + y82 + y83*y84 + y114,
        k25 + y83 + y84*y85 + y115,
        k26 + y84 + y85*y86 + y116 + 1,
        k27 + y85 + y86*y87 + y117,
        k28 + y86 + y87*y88 + y118 + 1,
        k29 + y87 + y88*y89 + y119,
        k0 + y88 + y89*y90 + y120,
        k1 + y89 + y90*y91 + y121,
        k2 + y90 + y91*y92 + y122,
        k3 + y91 + y92*y93 + y123 + 1,
        k4 + y92 + y93*y94 + y124,
        k5 + y93 + y94*y95 + y125,
        k6 + y94 + y95*y96 + y126,
        k7 + y95 + y96*y97 + y127 + 1,
        k8 + y96 + y97*y98 + y128,
        k9 + y97 + y98*y99 + y129,
        k10 + y98 + y99*y100 + y130 + 1,
        k11 + y99 + y100*y101 + y131 + 1,
        k12 + y100 + y101*y102 + y132,
        k13 + y101 + y102*y103 + y133 + 1,
        k14 + y102 + y103*y104 + y134,
        k15 + y103 + y104*y105 + y135 + 1,
        k16 + y104 + y105*y106 + y136 + 1,
        k17 + y105 + y106*y107 + y137 + 1,
        k18 + y106 + y107*y108 + y138 + 1,
        k19 + y107 + y108*y109 + y139 + 1,
        k20 + y108 + y109*y110 + y140 + 1,
        k21 + y109 + y110*y111 + y141 + 1,
        k22 + y110 + y111*y112 + y142,
        k23 + y111 + y112*y113 + y143 + 1,
        k24 + y112 + y113*y114 + y144 + 1,
        k25 + y113 + y114*y115 + y145,
        k26 + y114 + y115*y116 + y146,
        k27 + y115 + y116*y117 + y147 + 1,
        k28 + y116 + y117*y118 + y148,
        k29 + y117 + y118*y119 + y149 + 1,
        k0 + y118 + y119*y120 + y150,
        k1 + y119 + y120*y121 + y151,
        k2 + y120 + y121*y122 + y152,
        k3 + y121 + y122*y123 + y153,
        k4 + y122 + y123*y124 + y154 + 1,
        k5 + y123 + y124*y125 + y155,
        k6 + y124 + y125*y126 + y156,
        k7 + y125 + y126*y127 + y157,
        k8 + y126 + y127*y128 + y158 + 1,
        k9 + y127 + y128*y129 + y159,
        k10 + y128 + y129*y130 + y160,
        k11 + y129 + y130*y131 + y161 + 1,
        k12 + y130 + y131*y132 + y162 + 1,
        k13 + y131 + y132*y133 + y163,
        k14 + y132 + y133*y134 + y164 + 1,
        k15 + y133 + y134*y135 + y165,
        k16 + y134 + y135*y136 + y166 + 1,
        k17 + y135 + y136*y137 + y167 + 1,
        k18 + y136 + y137*y138 + y168 + 1,
        k19 + y137 + y138*y139 + y169 + 1,
        k20 + y138 + y139*y140 + y170 + 1,
        k21 + y139 + y140*y141 + y171 + 1,
        k22 + y140 + y141*y142 + y172 + 1,
        k23 + y141 + y142*y143 + y173,
        k24 + y142 + y143*y144 + y174 + 1,
        k25 + y143 + y144*y145 + y175 + 1,
        k26 + y144 + y145*y146 + y176,
        k27 + y145 + y146*y147 + y177,
        k28 + y146 + y147*y148 + y178 + 1,
        k29 + y147 + y148*y149 + y179,
        k0 + y148 + y149*y150 + y180 + 1,
        k1 + y149 + y150*y151 + y181,
        k2 + y150 + y151*y152 + y182,
        k3 + y151 + y152*y153 + y183,
        k4 + y152 + y153*y154 + y184,
        k5 + y153 + y154*y155 + y185 + 1,
        k6 + y154 + y155*y156 + y186,
        k7 + y155 + y156*y157 + y187,
        k8 + y156 + y157*y158 + y188,
        k9 + y157 + y158*y159 + y189 + 1,
        k10 + y158 + y159*y160 + y190,
        k11 + y159 + y160*y161 + y191,
        k12 + y160 + y161*y162 + y192 + 1,
        k13 + y161 + y162*y163 + y193 + 1,
        k14 + y162 + y163*y164 + y194,
        k15 + y163 + y164*y165 + y195 + 1,
        k16 + y164 + y165*y166 + y196,
        k17 + y165 + y166*y167 + y197 + 1,
        k18 + y166 + y167*y168 + y198 + 1,
        k19 + y167 + y168*y169 + y199 + 1,
        k20 + y168 + y169*y170 + y200 + 1,
        k21 + y169 + y170*y171 + y201 + 1,
        k22 + y170 + y171*y172 + y202 + 1,
        k23 + y171 + y172*y173 + y203 + 1,
        k24 + y172 + y173*y174 + y204,
        k25 + y173 + y174*y175 + y205 + 1,
        k26 + y174 + y175*y176 + y206 + 1,
        k27 + y175 + y176*y177 + y207,
        k28 + y176 + y177*y178 + y208,
        k29 + y177 + y178*y179 + y209 + 1,
        k0 + y178 + y179*y180 + y210,
        k1 + y179 + y180*y181 + y211 + 1,
        k2 + y180 + y181*y182 + y212,
        k3 + y181 + y182*y183 + y213,
        k4 + y182 + y183*y184 + y214,
        k5 + y183 + y184*y185 + y215,
        k6 + y184 + y185*y186 + y216 + 1,
        k7 + y185 + y186*y187 + y217,
        k8 + y186 + y187*y188 + y218,
        k9 + y187 + y188*y189 + y219,
        k10 + y188 + y189*y190 + y220 + 1,
        k11 + y189 + y190*y191 + y221,
        k12 + y190 + y191*y192 + y222,
        k13 + y191 + y192*y193 + y223 + 1,
        k14 + y192 + y193*y194 + y224 + 1,
        k15 + y193 + y194*y195 + y225,
        k16 + y194 + y195*y196 + y226 + 1,
        k17 + y195 + y196*y197 + y227,
        k18 + y196 + y197*y198 + y228 + 1,
        k19 + y197 + y198*y199 + y229 + 1,
        k20 + y198 + y199*y200 + y230 + 1,
        k21 + y199 + y200*y201 + y231 + 1,
        k22 + y200 + y201*y202 + y232 + 1,
        k23 + y201 + y202*y203 + y233 + 1,
        k24 + y202 + y203*y204 + y234 + 1,
        k25 + y203 + y204*y205 + y235,
        k26 + y204 + y205*y206 + y236 + 1,
        k27 + y205 + y206*y207 + y237 + 1,
        k28 + y206 + y207*y208 + y238,
        k29 + y207 + y208*y209 + y239,
        k0 + y208 + y209*y210 + y240 + 1,
        k1 + y209 + y210*y211 + y241,
        k2 + y210 + y211*y212 + y242 + 1,
        k3 + y211 + y212*y213 + y243,
        k4 + y212 + y213*y214 + y244,
        k5 + y213 + y214*y215 + y245,
        k6 + y214 + y215*y216 + y246,
        k7 + y215 + y216*y217 + y247 + 1,
        k8 + y216 + y217*y218 + y248,
        k9 + y217 + y218*y219 + y249,
        k10 + y218 + y219*y220 + y250,
        k11 + y219 + y220*y221 + y251 + 1,
        k12 + y220 + y221*y222 + y252,
        k13 + y221 + y222*y223 + y253,
        k14 + y222 + y223*y224 + y254 + 1,
        k15 + y223 + y224*y225 + y255 + 1,
        k16 + y224 + y225*y226 + y256,
        k17 + y225 + y226*y227 + y257 + 1,
        k18 + y226 + y227*y228 + y258,
        k19 + y227 + y228*y229 + y259 + 1,
        k20 + y228 + y229*y230 + y260 + 1,
        k21 + y229 + y230*y231 + y261 + 1,
        k22 + y230 + y231*y232 + y262 + 1,
        k23 + y231 + y232*y233 + y263 + 1,
        k24 + y232 + y233*y234 + y264 + 1,
        k25 + y233 + y234*y235 + y265 + 1,
        k26 + y234 + y235*y236 + y266,
        k27 + y235 + y236*y237 + y267 + 1,
        k28 + y236 + y237*y238 + y268 + 1,
        k29 + y237 + y238*y239 + y269,
        k0 + y238 + y239*y240 + y270,
        k1 + y239 + y240*y241 + y271 + 1,
        k2 + y240 + y241*y242 + y272,
        k3 + y241 + y242*y243 + y273 + 1,
        k4 + y242 + y243*y244 + y274,
        k5 + y243 + y244*y245 + y275,
        k6 + y244 + y245*y246 + y276,
        k7 + y245 + y246*y247 + y277,
        k8 + y246 + y247*y248 + y278 + 1,
        k9 + y247 + y248*y249 + y279,
        k10 + y248 + y249*y250 + y280,
        k11 + y249 + y250*y251 + y281,
        k12 + y250 + y251*y252 + y282 + 1,
        k13 + y251 + y252*y253 + y283,
        k14 + y252 + y253*y254 + y284,
        k15 + y253 + y254*y255 + y285 + 1,
        k16 + y254 + y255*y256 + y286 + 1,
        k17 + y255 + y256*y257 + y287,
        k18 + y256 + y257*y258 + y288 + 1,
        k19 + y257 + y258*y259 + y289,
        k20 + y258 + y259*y260 + y290 + 1,
        k21 + y259 + y260*y261 + y291 + 1,
        k22 + y260 + y261*y262 + y292 + 1,
        k23 + y261 + y262*y263 + y293 + 1,
        k24 + y262 + y263*y264 + y294 + 1,
        k25 + y263 + y264*y265 + y295 + 1,
        k26 + y264 + y265*y266 + y296 + 1,
        k27 + y265 + y266*y267 + y297,
        k28 + y266 + y267*y268 + y298 + 1,
        k29 + y267 + y268*y269 + y299 + 1,
        k0 + y268 + y269*y270 + y300,
        k1 + y269 + y270*y271 + y301,
        k2 + y270 + y271*y272 + y302 + 1,
        k3 + y271 + y272*y273 + y303,
        k4 + y272 + y273*y274 + y304 + 1,
        k5 + y273 + y274*y275 + y305,
        k6 + y274 + y275*y276 + y306,
        k7 + y275 + y276*y277 + y307,
        k8 + y276 + y277*y278 + y308,
        k9 + y277 + y278*y279 + y309 + 1,
        k10 + y278 + y279*y280 + y310,
        k11 + y279 + y280*y281 + y311,
        k12 + y280 + y281*y282 + y312,
        k13 + y281 + y282*y283 + y313 + 1,
        k14 + y282 + y283*y284 + y314,
        k15 + y283 + y284*y285 + y315,
        k16 + y284 + y285*y286 + y316 + 1,
        k17 + y285 + y286*y287 + y317 + 1,
        k18 + y286 + y287*y288 + y318,
        k19 + y287 + y288*y289 + y319 + 1,
        k20 + y288 + y289*y290 + y320,
        k21 + y289 + y290*y291 + y321 + 1,
        k22 + y290 + y291*y292 + y322 + 1,
        k23 + y291 + y292*y293 + y323 + 1,
        k24 + y292 + y293*y294 + y324 + 1,
        k25 + y293 + y294*y295 + y325 + 1,
        k26 + y294 + y295*y296 + y326 + 1,
        k27 + y295 + y296*y297 + y327 + 1,
        k28 + y296 + y297*y298 + y328,
        k29 + y297 + y298*y299 + y329 + 1,
        k0 + y298 + y299*y300 + y330 + 1,
        k1 + y299 + y300*y301 + y331,
        k2 + y300 + y301*y302 + y332,
        k3 + y301 + y302*y303 + y333 + 1,
        k4 + y302 + y303*y304 + y334,
        k5 + y303 + y304*y305 + y335 + 1,
        k6 + y304 + y305*y306 + y336,
        k7 + y305 + y306*y307 + y337,
        k8 + y306 + y307*y308 + y338,
        k9 + y307 + y308*y309 + y339,
        k10 + y308 + y309*y310 + y340 + 1,
        k11 + y309 + y310*y311 + y341,
        k12 + y310 + y311*y312 + y342,
        k13 + y311 + y312*y313 + y343,
        k14 + y312 + y313*y314 + y344 + 1,
        k15 + y313 + y314*y315 + y345,
        k16 + y314 + y315*y316 + y346,
        k17 + y315 + y316*y317 + y347 + 1,
        k18 + y316 + y317*y318 + y348 + 1,
        k19 + y317 + y318*y319 + y349,
        k20 + y318 + y319*y320 + y350 + 1,
        k21 + y319 + y320*y321 + y351,
        k22 + y320 + y321*y322 + y352 + 1,
        k23 + y321 + y322*y323 + y353 + 1,
        k24 + y322 + y323*y324 + y354 + 1,
        k25 + y323 + y324*y325 + y355 + 1,
        k26 + y324 + y325*y326 + y356 + 1,
        k27 + y325 + y326*y327 + y357 + 1,
        k28 + y326 + y327*y328 + y358 + 1,
        k29 + y327 + y328*y329 + y359,
        k0 + y328 + y329*y330 + y360 + 1,
        k1 + y329 + y330*y331 + y361 + 1,
        k2 + y330 + y331*y332 + y362,
        k3 + y331 + y332*y333 + y363,
        k4 + y332 + y333*y334 + y364 + 1,
        k5 + y333 + y334*y335 + y365,
        k6 + y334 + y335*y336 + y366 + 1,
        k7 + y335 + y336*y337 + y367,
        k8 + y336 + y337*y338 + y368,
        k9 + y337 + y338*y339 + y369,
        k10 + y338 + y339*y340 + y370,
        k11 + y339 + y340*y341 + y371 + 1,
        k12 + y340 + y341*y342 + y372,
        k13 + y341 + y342*y343 + y373,
        k14 + y342 + y343*y344 + y374,
        k15 + y343 + y344*y345 + y375 + 1,
        k16 + y344 + y345*y346 + y376,
        k17 + y345 + y346*y347 + y377,
        k18 + y346 + y347*y348 + y378 + 1,
        k19 + y347 + y348*y349 + y379 + 1,
        k20 + y348 + y349*y350 + y380,
        k21 + y349 + y350*y351 + y381 + 1,
        k22 + y350 + y351*y352 + y382,
        k23 + y351 + y352*y353 + y383 + 1,
        k24 + y352 + y353*y354 + y384 + 1,
        k25 + y353 + y354*y355 + y385 + 1,
        k26 + y354 + y355*y356 + y386 + 1,
        k27 + y355 + y356*y357 + y387 + 1,
        k28 + y356 + y357*y358 + y388 + 1,
        k29 + y357 + y358*y359 + y389 + 1,
        k0 + y358 + y359*y360 + y390,
        k1 + y359 + y360*y361 + y391 + 1,
        k2 + y360 + y361*y362 + y392 + 1,
        k3 + y361 + y362*y363 + y393,
        k4 + y362 + y363*y364 + y394,
        k5 + y363 + y364*y365 + y395 + 1,
        k6 + y364 + y365*y366 + y396,
        k7 + y365 + y366*y367 + y397 + 1,
        k8 + y366 + y367*y368 + y398,
        k9 + y367 + y368*y369 + y399,
        k10 + y368 + y369*y370 + y400,
        k11 + y369 + y370*y371 + y401,
        k12 + y370 + y371*y372 + y402 + 1,
        k13 + y371 + y372*y373 + y403,
        k14 + y372 + y373*y374 + y404,
        k15 + y373 + y374*y375 + y405,
        k16 + y374 + y375*y376 + y406 + 1,
        k17 + y375 + y376*y377 + y407,
        k18 + y376 + y377*y378 + y408,
        k19 + y377 + y378*y379 + y409 + 1,
        k20 + y378 + y379*y380 + y410 + 1,
        k21 + y379 + y380*y381 + y411,
        k22 + y380 + y381*y382 + y412 + 1,
        k23 + y381 + y382*y383 + y413,
        k24 + y382 + y383*y384 + y414 + 1,
        k25 + y383 + y384*y385 + y415 + 1,
        k26 + y384 + y385*y386 + y416 + 1,
        k27 + y385 + y386*y387 + y417 + 1,
        k28 + y386 + y387*y388 + y418 + 1,
        k29 + y387 + y388*y389 + y419 + 1,
        k0 + y388 + y389*y390 + y420 + 1,
        k1 + y389 + y390*y391 + y421,
        k2 + y390 + y391*y392 + y422 + 1,
        k3 + y391 + y392*y393 + y423 + 1,
        k4 + y392 + y393*y394 + y424,
        k5 + y393 + y394*y395 + y425,
        k6 + y394 + y395*y396 + y426 + 1,
        k7 + y395 + y396*y397 + y427,
        k8 + y396 + y397*y398 + y428 + 1,
        k9 + y397 + y398*y399 + y429,
        k10 + y398 + y399*y400 + y430,
        k11 + y399 + y400*y401 + y431,
        k12 + y400 + y401*y402 + y432,
        k13 + y401 + y402*y403 + y433 + 1,
        k14 + y402 + y403*y404 + y434,
        k15 + y403 + y404*y405 + y435,
        k16 + y404 + y405*y406 + y436,
        k17 + y405 + y406*y407 + y437 + 1,
        k18 + y406 + y407*y408 + y438,
        k19 + y407 + y408*y409 + y439,
        k20 + y408 + y409*y410 + y440 + 1,
        k21 + y409 + y410*y411 + y441 + 1,
        k22 + y410 + y411*y412 + y442,
        k23 + y411 + y412*y413 + y443 + 1,
        k24 + y412 + y413*y414 + y444,
        k25 + y413 + y414*y415 + y445 + 1,
        k26 + y414 + y415*y416 + y446 + 1,
        k27 + y415 + y416*y417 + y447 + 1,
        k28 + y416 + y417*y418 + y448 + 1,
        k29 + y417 + y418*y419 + y449 + 1,
        k0 + y418 + y419*y420 + y450 + 1,
        k1 + y419 + y420*y421 + y451 + 1,
        k2 + y420 + y421*y422 + y452,
        k3 + y421 + y422*y423 + y453 + 1,
        k4 + y422 + y423*y424 + y454 + 1,
        k5 + y423 + y424*y425 + y455,
        k6 + y424 + y425*y426 + y456,
        k7 + y425 + y426*y427 + y457 + 1,
        k8 + y426 + y427*y428 + y458,
        k9 + y427 + y428*y429 + y459 + 1,
        k10 + y428 + y429*y430 + y460,
        k11 + y429 + y430*y431 + y461,
        k12 + y430 + y431*y432 + y462,
        k13 + y431 + y432*y433 + y463,
        k14 + y432 + y433*y434 + y464 + 1,
        k15 + y433 + y434*y435 + y465,
        k16 + y434 + y435*y436 + y466,
        k17 + y435 + y436*y437 + y467,
        k18 + y436 + y437*y438 + y468 + 1,
        k19 + y437 + y438*y439 + y469,
        k20 + y438 + y439*y440 + y470,
        k21 + y439 + y440*y441 + y471 + 1,
        k22 + y440 + y441*y442 + y472 + 1,
        k23 + y441 + y442*y443 + y473,
        k24 + y442 + y443*y444 + y474 + 1,
        k25 + y443 + y444*y445 + y475,
        k26 + y444 + y445*y446 + y476 + 1,
        k27 + y445 + y446*y447 + y477 + 1,
        k28 + y446 + y447*y448 + y478 + 1,
        k29 + y447 + y448*y449 + y479 + 1,
        k0 + y448 + y449*y450 + y480 + 1,
        k1 + y449 + y450*y451 + y481 + 1,
        k2 + y450 + y451*y452 + y482 + 1,
        k3 + y451 + y452*y453 + y483,
        k4 + y452 + y453*y454 + y484 + 1,
        k5 + y453 + y454*y455 + y485 + 1,
        k6 + y454 + y455*y456 + y486,
        k7 + y455 + y456*y457 + y487,
        k8 + y456 + y457*y458 + y488 + 1,
        k9 + y457 + y458*y459 + y489,
        k10 + y458 + y459*y460 + y490 + 1,
        k11 + y459 + y460*y461 + y491,
        k12 + y460 + y461*y462 + y492,
        k13 + y461 + y462*y463 + y493,
        k14 + y462 + y463*y464 + y494,
        k15 + y463 + y464*y465 + y495 + 1,
        k16 + y464 + y465*y466 + y496,
        k17 + y465 + y466*y467 + y497,
        k18 + y466 + y467*y468 + y498,
        k19 + y467 + y468*y469 + y499 + 1,
        k20 + y468 + y469*y470 + y500,
        k21 + y469 + y470*y471 + y501,
        k22 + y470 + y471*y472 + y502 + 1,
        k23 + y471 + y472*y473 + y503 + 1,
        k24 + y472 + y473*y474 + y504,
        k25 + y473 + y474*y475 + y505 + 1,
        k26 + y474 + y475*y476 + y506,
        k27 + y475 + y476*y477 + y507 + 1,
        k28 + y476 + y477*y478 + y508 + 1,
        k29 + y477 + y478*y479 + y509 + 1,
        k0 + y478 + y479*y480 + y510 + 1,
        k1 + y479 + y480*y481 + y511 + 1,
        k2 + y480 + y481*y482 + y512 + 1,
        k3 + y481 + y482*y483 + y513 + 1,
        k4 + y482 + y483*y484 + y514,
        k5 + y483 + y484*y485 + y515 + 1,
        k6 + y484 + y485*y486 + y516 + 1,
        k7 + y485 + y486*y487 + y517,
        k8 + y486 + y487*y488 + y518,
        k9 + y487 + y488*y489 + y519 + 1,
        k10 + y488 + y489*y490 + y520,
        k11 + y489 + y490*y491 + y521 + 1,
        k12 + y490 + y491*y492 + y522,
        k13 + y491 + y492*y493 + y523,
        k14 + y492 + y493*y494 + y524,
        k15 + y493 + y494*y495 + y525,
        k16 + y494 + y495*y496 + y526 + 1,
        k17 + y495 + y496*y497 + y527,
        k18 + y496 + y497*y498 + y528,
        k19 + y497 + y498*y499 + y529,
        k20 + y498 + y499*y500 + y530 + 1,
        k21 + y499 + y500*y501 + y531,
        k22 + y500 + y501*y502 + y532,
        k23 + y501 + y502*y503 + y533 + 1,
        k24 + y502 + y503*y504 + y534 + 1,
        k25 + y503 + y504*y505 + y535,
        k26 + y504 + y505*y506 + y536 + 1,
        k27 + y505 + y506*y507 + y537,
        k28 + y506 + y507*y508 + y538 + 1,
        k29 + y507 + y508*y509 + y539 + 1,
        k0 + y508 + y509*y510 + y540 + 1,
        k1 + y509 + y510*y511 + y541 + 1,
        k2 + y510 + y511*y512 + y542 + 1,
        k3 + y511 + y512*y513 + y543 + 1,
        k4 + y512 + y513*y514 + y544 + 1,
        k5 + y513 + y514*y515 + y545,
        k6 + y514 + y515*y516 + y546 + 1,
        k7 + y515 + y516*y517 + y547 + 1,
        k8 + y516 + y517*y518 + y548,
        k9 + y517 + y518*y519 + y549,
        k10 + y518 + y519*y520 + y550 + 1,
        k11 + y519 + y520*y521 + y551,
        k12 + y520 + y521*y522 + y552 + 1,
        k13 + y521 + y522*y523 + y553,
        k14 + y522 + y523*y524 + y554,
        k15 + y523 + y524*y525 + y555,
        k16 + y524 + y525*y526 + y556,
        k17 + y525 + y526*y527 + y557 + 1,
        k18 + y526 + y527*y528 + y558,
        k19 + y527 + y528*y529 + y559,
        k20 + y528 + y529*y530 + y560,
        k21 + y529 + y530*y531 + y561 + 1,
        k22 + y530 + y531*y532 + y562,
        k23 + y531 + y532*y533 + y563,
        k24 + y532 + y533*y534 + y564 + 1,
        k25 + y533 + y534*y535 + y565 + 1,
        k26 + y534 + y535*y536 + y566,
        k27 + y535 + y536*y537 + y567 + 1,
        k28 + y536 + y537*y538 + y568,
        k29 + y537 + y538*y539 + y569 + 1,
        k0 + y538 + y539*y540 + y570 + 1,
        k1 + y539 + y540*y541 + y571 + 1,
        k2 + y540 + y541*y542 + y572 + 1,
        k3 + y541 + y542*y543 + y573 + 1,
        k4 + y542 + y543*y544 + y574 + 1,
        k5 + y543 + y544*y545 + y575 + 1,
        k6 + y544 + y545*y546 + y576,
        k7 + y545 + y546*y547 + y577 + 1,
        k8 + y546 + y547*y548 + y578 + 1,
        k9 + y547 + y548*y549 + y579,
        k10 + y548 + y549*y550 + y580,
        k11 + y549 + y550*y551 + y581 + 1,
        k12 + y550 + y551*y552 + y582,
        k13 + y551 + y552*y553 + y583 + 1,
        k14 + y552 + y553*y554 + y584,
        k15 + y553 + y554*y555 + y585,
        k16 + y554 + y555*y556 + y586,
        k17 + y555 + y556*y557 + y587,
        k18 + y556 + y557*y558 + y588 + 1,
        k19 + y557 + y558*y559 + y589,
        k20 + y558 + y559*y560 + y590,
        k21 + y559 + y560*y561 + y591,
        k22 + y560 + y561*y562 + y592 + 1,
        k23 + y561 + y562*y563 + y593,
        k24 + y562 + y563*y564 + y594,
        k25 + y563 + y564*y565 + y595 + 1,
        k26 + y564 + y565*y566 + y596 + 1,
        k27 + y565 + y566*y567 + y597,
        k28 + y566 + y567*y568 + y598 + 1,
        k29 + y567 + y568*y569 + y599,
        k0 + y568 + y569*y570 + y600 + 1,
        k1 + y569 + y570*y571 + y601 + 1,
        k2 + y570 + y571*y572 + y602 + 1,
        k3 + y571 + y572*y573 + y603 + 1,
        k4 + y572 + y573*y574 + y604 + 1,
        k5 + y573 + y574*y575 + y605 + 1,
        k6 + y574 + y575*y576 + y606 + 1,
        k7 + y575 + y576*y577 + y607,
        k8 + y576 + y577*y578 + y608 + 1,
        k9 + y577 + y578*y579 + y609 + 1,
        k10 + y578 + y579*y580 + y610,
        k11 + y579 + y580*y581 + y611,
        k12 + y580 + y581*y582 + y612 + 1,
        k13 + y581 + y582*y583 + y613,
        k14 + y582 + y583*y584 + y614 + 1,
        k15 + y583 + y584*y585 + y615,
        k16 + y584 + y585*y586 + y616,
        k17 + y585 + y586*y587 + y617,
        k18 + y586 + y587*y588 + y618,
        k19 + y587 + y588*y589 + y619 + 1,
        k20 + y588 + y589*y590 + y620,
        k21 + y589 + y590*y591 + y621,
        k22 + y590 + y591*y592 + y622,
        k23 + y591 + y592*y593 + y623 + 1,
        k24 + y592 + y593*y594 + y624,
        k25 + y593 + y594*y595 + y625,
        k26 + y594 + y595*y596 + y626 + 1,
        k27 + y595 + y596*y597 + y627 + 1,
        k28 + y596 + y597*y598 + y628,
        k29 + y597 + y598*y599 + y629 + 1,
        k0 + y598 + y599*y600 + y630,
        k1 + y599 + y600*y601 + y631 + 1,
        k2 + y600 + y601*y602 + y632 + 1,
        k3 + y601 + y602*y603 + y633 + 1,
        k4 + y602 + y603*y604 + y634 + 1,
        k5 + y603 + y604*y605 + y635 + 1,
        k6 + y604 + y605*y606 + y636 + 1,
        k7 + y605 + y606*y607 + y637 + 1,
        k8 + y606 + y607*y608 + y638,
        k9 + y607 + y608*y609 + y639 + 1,
        k10 + y608 + y609*y610 + y640 + 1,
        k11 + y609 + y610*y611 + y641,
        k12 + y610 + y611*y612 + y642,
        k13 + y611 + y612*y613 + y643 + 1,
        k14 + y612 + y613*y614 + y644,
        k15 + y613 + y614*y615 + y645 + 1,
        k16 + y614 + y615*y616 + y646,
        k17 + y615 + y616*y617 + y647,
        k18 + y616 + y617*y618 + y648,
        k19 + y617 + y618*y619 + y649,
        k20 + y618 + y619*y620 + y650 + 1,
        k21 + y619 + y620*y621 + y651,
        k22 + y620 + y621*y622 + y652,
        k23 + y621 + y622*y623 + y653,
        k24 + y622 + y623*y624 + y654 + 1,
        k25 + y623 + y624*y625 + y655,
        k26 + y624 + y625*y626 + y656,
        k27 + y625 + y626*y627 + y657 + 1,
        k28 + y626 + y627*y628 + y658 + 1,
        k29 + y627 + y628*y629 + y659,
        k0 + y628 + y629*y630 + y660 + 1,
        k1 + y629 + y630*y631 + y661,
        k2 + y630 + y631*y632 + y662 + 1,
        k3 + y631 + y632*y633 + y663 + 1,
        k4 + y632 + y633*y634 + y664 + 1,
        k5 + y633 + y634*y635 + y665 + 1,
        k6 + y634 + y635*y636 + y666 + 1,
        k7 + y635 + y636*y637 + y667 + 1,
        k8 + y636 + y637*y638 + y668 + 1,
        k9 + y637 + y638*y639 + y669,
        k10 + y638 + y639*y640 + y670 + 1,
        k11 + y639 + y640*y641 + y671 + 1,
        k12 + y640 + y641*y642 + y672,
        k13 + y641 + y642*y643 + y673,
        k14 + y642 + y643*y644 + y674 + 1,
        k15 + y643 + y644*y645 + y675,
        k16 + y644 + y645*y646 + y676 + 1,
        k17 + y645 + y646*y647 + y677,
        k18 + y646 + y647*y648 + y678,
        k19 + y647 + y648*y649 + y679,
        k20 + y648 + y649*y650 + y680,
        k21 + y649 + y650*y651 + y681 + 1,
        k22 + y650 + y651*y652 + y682,
        k23 + y651 + y652*y653 + y683,
        k24 + y652 + y653*y654 + y684,
        k25 + y653 + y654*y655 + y685 + 1,
        k26 + y654 + y655*y656 + y686,
        k27 + y655 + y656*y657 + y687,
        k28 + y656 + y657*y658 + y688 + 1,
        k29 + y657 + y658*y659 + y689 + 1,
        k0 + y658 + y659*y660 + y690,
        k1 + y659 + y660*y661 + y691 + 1,
        k2 + y660 + y661*y662 + y692,
        k3 + y661 + y662*y663 + y693 + 1,
        k4 + y662 + y663*y664 + y694 + 1,
        k5 + y663 + y664*y665 + y695 + 1,
        k6 + y664 + y665*y666 + y696 + 1,
        k7 + y665 + y666*y667 + y697 + 1,
        k8 + y666 + y667*y668 + y698 + 1,
        k9 + y667 + y668*y669 + y699 + 1,
        k10 + y668 + y669*y670 + y700,
        k11 + y669 + y670*y671 + y701 + 1,
        k12 + y670 + y671*y672 + y702 + 1,
        k13 + y671 + y672*y673 + y703,
        k14 + y672 + y673*y674 + y704,
        k15 + y673 + y674*y675 + y705 + 1,
        k16 + y674 + y675*y676 + y706,
        k17 + y675 + y676*y677 + y707 + 1,
        k18 + y676 + y677*y678 + y708,
        k19 + y677 + y678*y679 + y709,
        k20 + y678 + y679*y680 + y710,
        k21 + y679 + y680*y681 + y711,
        k22 + y680 + y681*y682 + y712 + 1,
        k23 + y681 + y682*y683 + y713,
        k24 + y682 + y683*y684 + y714,
        k25 + y683 + y684*y685 + y715,
        k26 + y684 + y685*y686 + y716 + 1,
        k27 + y685 + y686*y687 + y717,
        k28 + y686 + y687*y688 + y718,
        k29 + y687 + y688*y689 + y719 + 1,
        k0 + y688 + y689*y690 + y720 + 1,
        k1 + y689 + y690*y691 + y721,
        k2 + y690 + y691*y692 + y722 + 1,
        k3 + y691 + y692*y693 + y723,
        k4 + y692 + y693*y694 + y724 + 1,
        k5 + y693 + y694*y695 + y725 + 1,
        k6 + y694 + y695*y696 + y726 + 1,
        k7 + y695 + y696*y697 + y727 + 1,
        k8 + y696 + y697*y698 + y728 + 1,
        k9 + y697 + y698*y699 + y729 + 1,
        k10 + y698 + y699*y700 + y730 + 1,
        k11 + y699 + y700*y701 + y731,
        k12 + y700 + y701*y702 + y732 + 1,
        k13 + y701 + y702*y703 + y733 + 1,
        k14 + y702 + y703*y704 + y734,
        k15 + y703 + y704*y705 + y735,
        k16 + y704 + y705*y706 + y736 + 1,
        k17 + y705 + y706*y707 + y737,
        k18 + y706 + y707*y708 + y738 + 1,
        k19 + y707 + y708*y709 + y739,
        k20 + y708 + y709*y710 + y740,
        k21 + y709 + y710*y711 + y741,
        k22 + y710 + y711*y712 + y742,
        k23 + y711 + y712*y713 + y743 + 1,
        k24 + y712 + y713*y714 + y744,
        k25 + y713 + y714*y715 + y745,
        k26 + y714 + y715*y716 + y746,
        k27 + y715 + y716*y717 + y747 + 1,
        k28 + y716 + y717*y718 + y748,
        k29 + y717 + y718*y719 + y749,
        k0 + y718 + y719*y720 + y750 + 1,
        k1 + y719 + y720*y721 + y751 + 1,
        k2 + y720 + y721*y722 + y752,
        k3 + y721 + y722*y723 + y753 + 1,
        k4 + y722 + y723*y724 + y754,
        k5 + y723 + y724*y725 + y755 + 1,
        k6 + y724 + y725*y726 + y756 + 1,
        k7 + y725 + y726*y727 + y757 + 1,
        k8 + y726 + y727*y728 + y758 + 1,
        k9 + y727 + y728*y729 + y759 + 1,
        k10 + y728 + y729*y730 + y760 + 1,
        k11 + y729 + y730*y731 + y761 + 1,
        k12 + y730 + y731*y732 + y762,
        k13 + y731 + y732*y733 + y763 + 1,
        k14 + y732 + y733*y734 + y764 + 1,
        k15 + y733 + y734*y735 + y765,
        k16 + y734 + y735*y736 + y766,
        k17 + y735 + y736*y737 + y767 + 1,
        k18 + y736 + y737*y738 + y768,
        k19 + y737 + y738*y739 + y769 + 1,
        k20 + y738 + y739*y740 + y770,
        k21 + y739 + y740*y741 + y771,
        k22 + y740 + y741*y742 + y772,
        k23 + y741 + y742*y743 + y773,
        k24 + y742 + y743*y744 + y774 + 1,
        k25 + y743 + y744*y745 + y775,
        k26 + y744 + y745*y746 + y776,
        k27 + y745 + y746*y747 + y777,
        k28 + y746 + y747*y748 + y778 + 1,
        k29 + y747 + y748*y749 + y779,
        k0 + y748 + y749*y750 + y780,
        k1 + y749 + y750*y751 + y781 + 1,
        k2 + y750 + y751*y752 + y782 + 1,
        k3 + y751 + y752*y753 + y783,
        k4 + y752 + y753*y754 + y784 + 1,
        k5 + y753 + y754*y755 + y785,
        k6 + y754 + y755*y756 + y786 + 1,
        k7 + y755 + y756*y757 + y787 + 1,
        k8 + y756 + y757*y758 + y788 + 1,
        k9 + y757 + y758*y759 + y789 + 1,
        k10 + y758 + y759*y760 + y790 + 1,
        k11 + y759 + y760*y761 + y791 + 1,
        k12 + y760 + y761*y762 + y792 + 1,
        k13 + y761 + y762*y763 + y793,
        k14 + y762 + y763*y764 + y794 + 1,
        k15 + y763 + y764*y765 + y795 + 1,
        k16 + y764 + y765*y766 + y796,
        k17 + y765 + y766*y767 + y797,
        k18 + y766 + y767*y768 + y798 + 1,
        k19 + y767 + y768*y769 + y799,
        k20 + y768 + y769*y770 + y800 + 1,
        k21 + y769 + y770*y771 + y801,
        k22 + y770 + y771*y772 + y802,
        k23 + y771 + y772*y773 + y803,
        k24 + y772 + y773*y774 + y804,
        k25 + y773 + y774*y775 + y805 + 1,
        k26 + y774 + y775*y776 + y806,
        k27 + y775 + y776*y777 + y807,
        k28 + y776 + y777*y778 + y808,
        k29 + y777 + y778*y779 + y809 + 1,
        k0 + y778 + y779*y780 + y810,
        k1 + y779 + y780*y781 + y811,
        k2 + y780 + y781*y782 + y812 + 1,
        k3 + y781 + y782*y783 + y813 + 1,
        k4 + y782 + y783*y784 + y814,
        k5 + y783 + y784*y785 + y815 + 1,
        k6 + y784 + y785*y786 + y816,
        k7 + y785 + y786*y787 + y817 + 1,
        k8 + y786 + y787*y788 + y818 + 1,
        k9 + y787 + y788*y789 + y819 + 1,
        k10 + y788 + y789*y790 + y820 + 1,
        k11 + y789 + y790*y791 + y821 + 1,
        k12 + y790 + y791*y792 + y822 + 1,
        k13 + y791 + y792*y793 + y823 + 1,
        k14 + y792 + y793*y794 + y824,
        k15 + y793 + y794*y795 + y825 + 1,
        k16 + y794 + y795*y796 + y826 + 1,
        k17 + y795 + y796*y797 + y827,
        k18 + y796 + y797*y798 + y828,
        k19 + y797 + y798*y799 + y829 + 1,
        k20 + y798 + y799*y800 + y830,
        k21 + y799 + y800*y801 + y831 + 1,
        k22 + y800 + y801*y802 + y832,
        k23 + y801 + y802*y803 + y833,
        k24 + y802 + y803*y804 + y834,
        k25 + y803 + y804*y805 + y835,
        k26 + y804 + y805*y806 + y836 + 1,
        k27 + y805 + y806*y807 + y837,
        k28 + y806 + y807*y808 + y838,
        k29 + y807 + y808*y809 + y839,
        k0 + y808 + y809*y810 + y840 + 1,
        k1 + y809 + y810*y811 + y841,
        k2 + y810 + y811*y812 + y842,
        k3 + y811 + y812*y813 + y843 + 1,
        k4 + y812 + y813*y814 + y844 + 1,
        k5 + y813 + y814*y815 + y845,
        k6 + y814 + y815*y816 + y846 + 1,
        k7 + y815 + y816*y817 + y847,
        k8 + y816 + y817*y818 + y848 + 1,
        k9 + y817 + y818*y819 + y849 + 1,
        k10 + y818 + y819*y820 + y850 + 1,
        k11 + y819 + y820*y821 + y851 + 1,
        k12 + y820 + y821*y822 + y852 + 1,
        k13 + y821 + y822*y823 + y853 + 1,
        k14 + y822 + y823*y824 + y854 + 1,
        k15 + y823 + y824*y825 + y855,
        k16 + y824 + y825*y826 + y856 + 1,
        k17 + y825 + y826*y827 + y857 + 1,
        k18 + y826 + y827*y828 + y858,
        k19 + y827 + y828*y829 + y859,
        k20 + y828 + y829*y830 + y860 + 1,
        k21 + y829 + y830*y831 + y861,
        k22 + y830 + y831*y832 + y862 + 1,
        k23 + y831 + y832*y833 + y863,
        k24 + y832 + y833*y834 + y864,
        k25 + y833 + y834*y835 + y865,
        k26 + y834 + y835*y836 + y866,
        k27 + y835 + y836*y837 + y867 + 1,
        k28 + y836 + y837*y838 + y868,
        k29 + y837 + y838*y839 + y869,
        k0 + y838 + y839*y840 + y870,
        k1 + y839 + y840*y841 + y871 + 1,
        k2 + y840 + y841*y842 + y872,
        k3 + y841 + y842*y843 + y873,
        k4 + y842 + y843*y844 + y874 + 1,
        k5 + y843 + y844*y845 + y875 + 1,
        k6 + y844 + y845*y846 + y876,
        k7 + y845 + y846*y847 + y877 + 1,
        k8 + y846 + y847*y848 + y878,
        k9 + y847 + y848*y849 + y879 + 1,
        k10 + y848 + y849*y850 + y880 + 1,
        k11 + y849 + y850*y851 + y881 + 1,
        k12 + y850 + y851*y852 + y882 + 1,
        k13 + y851 + y852*y853 + y883 + 1,
        k14 + y852 + y853*y854 + y884 + 1,
        k15 + y853 + y854*y855 + y885 + 1,
        k16 + y854 + y855*y856 + y886,
        k17 + y855 + y856*y857 + y887 + 1,
        k18 + y856 + y857*y858 + y888 + 1,
        k19 + y857 + y858*y859 + y889,
        k20 + y858 + y859*y860 + y890,
        k21 + y859 + y860*y861 + y891 + 1,
        k22 + y860 + y861*y862 + y892,
        k23 + y861 + y862*y863 + y893 + 1,
        k24 + y862 + y863*y864 + y894,
        k25 + y863 + y864*y865 + y895,
        k26 + y864 + y865*y866 + y896,
        k27 + y865 + y866*y867 + y897,
        k28 + y866 + y867*y868 + y898 + 1,
        k29 + y867 + y868*y869 + y899,
        k0 + y868 + y869*y870 + y900,
        k1 + y869 + y870*y871 + y901,
        k2 + y870 + y871*y872 + y902 + 1,
        k3 + y871 + y872*y873 + y903,
        k4 + y872 + y873*y874 + y904,
        k5 + y873 + y874*y875 + y905 + 1,
        k6 + y874 + y875*y876 + y906 + 1,
        k7 + y875 + y876*y877 + y907,
        k8 + y876 + y877*y878 + y908 + 1,
        k9 + y877 + y878*y879 + y909,
        k10 + y878 + y879*y880 + y910 + 1,
        k11 + y879 + y880*y881 + y911 + 1,
        k12 + y880 + y881*y882 + y912 + 1,
        k13 + y881 + y882*y883 + y913 + 1,
        k14 + y882 + y883*y884 + y914 + 1,
        k15 + y883 + y884*y885 + y915 + 1,
        k16 + y884 + y885*y886 + y916 + 1,
        k17 + y885 + y886*y887 + y917,
        k18 + y886 + y887*y888 + y918 + 1,
        k19 + y887 + y888*y889 + y919 + 1,
        k20 + y888 + y889*y890 + y920,
        k21 + y889 + y890*y891 + y921,
        k22 + y890 + y891*y892 + y922 + 1,
        k23 + y891 + y892*y893 + y923,
        k24 + y892 + y893*y894 + y924 + 1,
        k25 + y893 + y894*y895 + y925,
        k26 + y894 + y895*y896 + y926,
        k27 + y895 + y896*y897 + y927,
        k28 + y896 + y897*y898 + y928,
        k29 + y897 + y898*y899 + y929 + 1,
        k0 + y898 + y899*y900 + y930,
        k1 + y899 + y900*y901 + y931,
        k2 + y900 + y901*y902 + y932,
        k3 + y901 + y902*y903 + y933 + 1,
        k4 + y902 + y903*y904 + y934,
        k5 + y903 + y904*y905 + y935,
        k6 + y904 + y905*y906 + y936 + 1,
        k7 + y905 + y906*y907 + y937 + 1,
        k8 + y906 + y907*y908 + y938,
        k9 + y907 + y908*y909 + y939 + 1,
        k10 + y908 + y909*y910 + y940,
        k11 + y909 + y910*y911 + y941 + 1,
        k12 + y910 + y911*y912 + y942 + 1,
        k13 + y911 + y912*y913 + y943 + 1,
        k14 + y912 + y913*y914 + y944 + 1,
        k15 + y913 + y914*y915 + y945 + 1,
        k16 + y914 + y915*y916 + y946 + 1,
        k17 + y915 + y916*y917 + y947 + 1,
        k18 + y916 + y917*y918 + y948,
        k19 + y917 + y918*y919 + y949 + 1,
        k20 + y918 + y919*y920 + y950 + 1,
        k21 + y919 + y920*y921 + y951,
        k22 + y920 + y921*y922 + y952,
        k23 + y921 + y922*y923 + y953 + 1,
        k24 + y922 + y923*y924 + y954,
        k25 + y923 + y924*y925 + y955 + 1,
        k26 + y924 + y925*y926 + y956,
        k27 + y925 + y926*y927 + y957,
        k28 + y926 + y927*y928 + y958,
        k29 + y927 + y928*y929 + y959,
        k0 + y928 + y929*y930 + y960 + 1,
        k1 + y929 + y930*y931 + y961,
        k2 + y930 + y931*y932 + y962,
        k3 + y931 + y932*y933 + y963,
        k4 + y932 + y933*y934 + y964 + 1,
        k5 + y933 + y934*y935 + y965,
        k6 + y934 + y935*y936 + y966,
        k7 + y935 + y936*y937 + y967 + 1,
        k8 + y936 + y937*y938 + y968 + 1,
        k9 + y937 + y938*y939 + y969,
        k10 + y938 + y939*y940 + y970 + 1,
        k11 + y939 + y940*y941 + y971,
        k12 + y940 + y941*y942 + y972 + 1,
        k13 + y941 + y942*y943 + y973 + 1,
        k14 + y942 + y943*y944 + y974 + 1,
        k15 + y943 + y944*y945 + y975 + 1,
        k16 + y944 + y945*y946 + y976 + 1,
        k17 + y945 + y946*y947 + y977 + 1,
        k18 + y946 + y947*y948 + y978 + 1,
        k19 + y947 + y948*y949 + y979,
        k20 + y948 + y949*y950 + y980 + 1,
        k21 + y949 + y950*y951 + y981 + 1,
        k22 + y950 + y951*y952 + y982,
        k23 + y951 + y952*y953 + y983,
        k24 + y952 + y953*y954 + y984 + 1,
        k25 + y953 + y954*y955 + y985,
        k26 + y954 + y955*y956 + y986 + 1,
        k27 + y955 + y956*y957 + y987,
        k28 + y956 + y957*y958 + y988,
        k29 + y957 + y958*y959 + y989,
        k0 + y958 + y959*y960 + y990,
        k1 + y959 + y960*y961 + y991 + 1,
        k2 + y960 + y961*y962 + y992,
        k3 + y961 + y962*y963 + y993,
        k4 + y962 + y963*y964 + y994,
        k5 + y963 + y964*y965 + y995 + 1,
        k6 + y964 + y965*y966 + y996,
        k7 + y965 + y966*y967 + y997,
        k8 + y966 + y967*y968 + y998 + 1,
        k9 + y967 + y968*y969 + y999 + 1,
        k10 + y968 + y969*y970 + y1000,
        k11 + y969 + y970*y971 + y1001 + 1,
        k12 + y970 + y971*y972 + y1002,
        k13 + y971 + y972*y973 + y1003 + 1,
        k14 + y972 + y973*y974 + y1004 + 1,
        k15 + y973 + y974*y975 + y1005 + 1,
        k16 + y974 + y975*y976 + y1006 + 1,
        k17 + y975 + y976*y977 + y1007 + 1,
        k18 + y976 + y977*y978 + y1008 + 1,
        k19 + y977 + y978*y979 + y1009 + 1,
        k20 + y978 + y979*y980 + y1010,
        k21 + y979 + y980*y981 + y1011 + 1,
        k22 + y980 + y981*y982 + y1012 + 1,
        k23 + y981 + y982*y983 + y1013,
        k24 + y982 + y983*y984 + y1014,
        k25 + y983 + y984*y985 + y1015 + 1,
        k26 + y984 + y985*y986 + y1016,
        k27 + y985 + y986*y987 + y1017 + 1,
        k28 + y986 + y987*y988 + y1018,
        k29 + y987 + y988*y989 + y1019,
        k0 + y988 + y989*y990 + y1020,
        k1 + y989 + y990*y991 + y1021,
        k2 + y990 + y991*y992 + y1022 + 1,
        k3 + y991 + y992*y993 + y1023]

num_solutions = []
times = []

for v in range(TST):
    mkey = []
    P = []
    for i in range(KEY) : mkey.append(randrange(0,10)&1)
    for i in range(BLK) : P.append(randrange(0,10)&1)
    C = elf_enc(P,mkey,CNST)
    
    eqns_derived = []
    for i in range(len(eqns)) : eqns_derived.append(eqns[i].subs(x0=P[0],x1=P[1],x2=P[2],x3=P[3],x4=P[4],x5=P[5],x6=P[6],x7=P[7],y1023=C[3],y1022=C[4],y1021=C[5],y1020=C[6],y1019=C[7],y1018=C[8],y1017=C[9],y1016=C[10],y1015=C[11],y1014=C[12],y1013=C[13],y1012=C[14],y1011=C[15],y1010=C[16],y1009=C[17],y1008=C[18],y1007=C[19],y1006=C[20],y1005=C[21],y1004=C[22],y1003=C[23],y1002=C[24],y1001=C[25],y1000=C[26],y999=C[27],y998=C[28],y997=C[29],y996=C[30],y995=C[31],y994=C[0],y993=C[1],y992=C[2]))


    S = PolynomialSequence(eqns_derived);
    strt = cputime()
    A = S.solve(n=Infinity, algorithm='sat', eliminate_linear_variables=false);
    elapsed = cputime(strt)
    times.append(elapsed)
    print "elapsed ",v," : ",elapsed
    if A == false : num_solutions.append(0)
    else : num_solutions.append(len(A))



ofilename = "B"+str(BLK)+"R"+str(RND)+"T"+str(TST)+"_plot.py"
ofile = open(ofilename,"w")


printable = """import matplotlib.pyplot as plt
num_solutions = ("""


for i in range(TST-1) : printable += str(num_solutions[i])+","
printable += str(num_solutions[TST-1])+")\ntimes = ("
for i in range(TST-1): printable += str(times[i])+","
printable += str(times[TST-1])+")"

printable += """
plt.subplot2grid((1,2), (0, 0), rowspan=1, colspan=1)
plt.hist(num_solutions)
plt.title(\"Avarage # of solutions : \"+str(float(sum(num_solutions))/len(num_solutions)))
plt.xlabel(\"number of solutions\")
plt.ylabel(\"Frequency\")

plt.subplot2grid((1,2), (0, 1), rowspan=1, colspan=1)
plt.hist(times)
plt.title(\"Average time : \"+str(float(sum(times)/len(times))))
plt.xlabel(\"Execution times\")
plt.ylabel(\"Frequency\")

plt.show()\n
"""

ofile.write(printable)
ofile.close()

